hepl(c)
#simple bar chart
barplot(sport, names.arg = lbls, main = "Bar chart of favourite sports",
col = c("red", "blue", "orange", "pink"))
#Unit1 Exercise about Piechart
#one option is to directlt weite the data
#simple pie chart
sport <- c(9, 6, 5, 7)
#simple bar chart
barplot(sport, names.arg = lbls, main = "Bar chart of favourite sports",
col = c("red", "blue", "orange", "pink"))
lbls <- c("Rugby", "Football", "Basketball", "Other")
pie(sport, label=lbls, mian="Pie chart of favourite sports")
#simple bar chart
barplot(sport, names.arg = lbls, main = "Bar chart of favourite sports",
col = c("red", "blue", "orange", "pink"))
#Unit1 Exercise about Piechart
#one option is to directlt weite the data
#simple pie chart
sport <- c(9, 6, 5, 7)
lbls <- c("Rugby", "Football", "Basketball", "Other")
pie(sport, label=lbls, mian="Pie chart of favourite sports")
pie(sport, label=lbls, main="Pie chart of favourite sports")
#another option is to loqd the data in Unit1_piechart.csv
#two options:wirte
data <- read.csv("Unite1_Piechart", header = T)
#another option is to loqd the data in Unit1_piechart.csv
#two options:wirte
data <- read.csv("data_csv_file/Unite1_Piechart", header = T)
#another option is to loqd the data in Unit1_piechart.csv
#two options:wirte
data <- read.csv("data_csv_files/Unite1_Piechart", header = T)
#another option is to loqd the data in Unit1_piechart.csv
#two options:wirte
data <- read.csv("data_csv_files/Unite1_Piechart.csv", header = T)
#another option is to loqd the data in Unit1_piechart.csv
#two options:wirte
#data <- read.csv("data_csv_files/Unite1_Piechart.csv", header = T)
#choose the file
data <- read.csv(file.choose(), header=T)
View(data)
#another option is to loqd the data in Unit1_piechart.csv
#two options:wirte
#data <- read.csv("data_csv_files/Unite1_Piechart.csv", header = T)
#choose the file
data <- read.csv(file.choose(), header=T, sep = ";")
View(data)
#another option is to loqd the data in Unit1_piechart.csv
#two options:wirte
data <- read.csv2("data_csv_files/Unite1_Piechart.csv", header = T)
#another option is to loqd the data in Unit1_piechart.csv
#two options:wirte
data <- read.csv2("data_csv_files/Unit1_Piechart.csv", header = T)
sport_vector
#Declare vectors: values of the variable and frequencies
sport_vector <- data$Favourite_Sport
sport_vector
frequency_vector <- data$Frequency
frequency_vector
#now depict a piechart
pie(frequency_vector, labels = sport_vector, main = "Pie charts of favorite sport")
data_height <- read.csv("data_csv_files/Unit1_Heights.csv", header = T)
View(data_height)
data
data_height
#another way of creating varaibles is bu indicating the column:
Heights <- data[,1]
Heights
#another way of creating varaibles is bu indicating the column:
Heights <- data_height[,1]
Heights
#now compute the mean
mean(Heights)
#and the median
median(Heights)
quantile(Heights)
data_height$Heights
#or a specific percentile
quantile(Heights,0.25)
#and a histogram (with some of the many options available)
hist(Heights, breaks = (1.6, 1.7, 1.8, 1.9), col="blue", main="Histogram",
xlab="Height", ylab="Frequency")
#and a histogram (with some of the many options available)
hist(Heights, breaks = (1.6, 1.7, 1.8, 1.9), col="blue", main="Histogram",
xlab="Height", ylab="Frequency")
#and a histogram (with some of the many options available)
hist(Heights, breaks = c(1.6, 1.7, 1.8, 1.9), col="blue", main="Histogram",
xlab="Height", ylab="Frequency")
hist(Heights,col="blue",main="histogram",xlab="Height", ylab = "Frequency")
range_Heights <- max(Heights)
range_Heights
range_Heights <- max(Heights) - min(Heights)
range_Heights
IQR(Heights)
quantile(Heights)
#standard deviation
sd(Heights)
#variance
var(Heights)
#coefficient of variation.
CV <- function(mead, sd){
(sd/mean)*100
}
CV(mean=mean(Heights), sd=sd(Heights))
CV(3,2)
CV(mean= mean(Heights), sd=sd(Heights))
#coefficient of variation.
CV <- function(mean, sd){
(sd/mean)*100
}
CV(mean= mean(Heights), sd=sd(Heights))
CV(3,2)
#Skewness(asymetry) coefficient and Kurtosis
library(moments)
#Skewness(asymetry) coefficient and Kurtosis
install.packages(moments)
library(moments)
#Skewness(asymetry) coefficient and Kurtosis
install.packages(moments)
install.packages(moments)
#Skewness(asymetry) coefficient and Kurtosis
install.packages("moments")
library(moments)
skewness(Heights)
kurtosis(Heights)
boxplot(Heights, horizontal = TRUE, main="Box-Whisker plot",
xlab="Heights", ylab="values")
abline(v=mean(Heights), col="red")
read.csv("data_csv_files/Data_Expenses.csv",header = T)
data_expenses <- read.csv("data_csv_files/Data_Expenses.csv",header = T)
data_expenses <- read.csv("data_csv_files/Data_Expenses.csv",header = T, sep=";")
View(data_expenses)
length(data)
length(data_expenses)
length(data_expenses$ExpensesMay)
mean(data_expenses$ExpensesMay)
data_expenses <- read.csv("data_csv_files/Data_Expenses.csv",header = T, sep=";", quote = ",")
data_expenses <- read.csv("data_csv_files/Data_Expenses.csv",header = T, sep=";", quote = ",")
data_expenses <- read.csv("data_csv_files/Data_Expenses.csv",header = T, sep=";", dec = ",")
length(data_expenses$ExpensesMay)
mean(data_expenses$ExpensesMay)
median(data_expenses$ExpensesMay)
quantile(data_expenses$ExpensesMay, 0.25)
quantitle(data_expenses$ExpensesMay, 0.75)
quantile(data_expenses$ExpensesMay, 0.75)
may <- data_expenses$ExpensesMay
var(may)
sd(may)
max(may)-min(may)
q1<-quantile(data_expenses$ExpensesMay, 0.25)
q3<-quantile(data_expenses$ExpensesMay, 0.75)
q3-q1
IQR(may)
quantitle(may,0.85)
quantile(may,0.85)
1-pbinom(2, size = 10, prob = 0.02)
1-pbinom(0, size = 5, prob = 0.1)
#exe find n2
pbinom(1, size = 10, prob=0.05)
#exe find n2
pbinom(1, size = 50, prob=0.05)
#exe find n2
pbinom(1, size = 100, prob=0.05)
#exe find n2
pbinom(1, size = 75, prob=0.05)
#exe find n2
pbinom(1, size = 85, prob=0.05)
#exe find n2
pbinom(1, size = 80, prob=0.05)
#exe find n2
pbinom(1, size = 77, prob=0.05)
#exe find n2
pbinom(1, size = 76, prob=0.05)
#normal distribution
#in this file the decimal separator is '.' so we use read.csv
data_height -> read.csv("data_csv_files/Unit1_Heights.csv", header = T)
#normal distribution
#in this file the decimal separator is '.' so we use read.csv
data_height <- read.csv("data_csv_files/Unit1_Heights.csv", header = T)
height <- data_height$Heights
#find the normal probability plot
qqnorm(height)
#do the shapiro-wilk test
shapiro.test(height)
pnrom(4.9, mean=5, sd=0.1, lowe.tail=true)
pnorm(4.9, mean=5, sd=0.1, lowe.tail=true)
pnorm(4.9, mean=5, sd=0.1, lower.tail=true)
pnorm(4.9, mean=5, sd=0.1, lower.tail=ture)
pnorm(4.9, mean=5, sd=0.1, lower.tail=TRUE)
pnorm(4.8, mean=5, sd=0.1, lower.tail=FALSE)
pnorm(45, mean=25, sd=7, lower.tail=TRUE)
pnorm(45, mean=30, sd=3, lower.tail=TRUE)
pnorm(60, mean=30, sd=3, lower.tail=TRUE)
pnorm(50, mean=30, sd=3, lower.tail=TRUE)
pnorm(30, mean=30, sd=3, lower.tail=TRUE)
pnorm(40, mean=30, sd=3, lower.tail=TRUE)
pnorm(35, mean=30, sd=3, lower.tail=TRUE)
pnorm(32, mean=30, sd=3, lower.tail=TRUE)
pnorm(33, mean=30, sd=3, lower.tail=TRUE)
pnorm(34, mean=30, sd=3, lower.tail=TRUE)
pbinom(5, size = 100, prob = 0.08)
pbinom(5, size = 500, prob = 0.08)
pbinom(5, size = 250, prob = 0.08)
pbinom(5, size = 200, prob = 0.08)
pbinom(5, size = 150, prob = 0.08)
pbinom(5, size = 125, prob = 0.08)
pbinom(5, size = 110, prob = 0.08)
pbinom(5, size = 115, prob = 0.08)
pbinom(5, size = 112, prob = 0.08)
pbinom(5, size = 111, prob = 0.08)
pbinom(5, size = 110, prob = 0.08)
pbinom(5, size = 113, prob = 0.08)
pbinom(5, size = 114, prob = 0.08)
